-- 主节点配置

thread = 8 --启用多少个工作线
cpath = "./skynet/cservice/?.so" --用C编写的服务模块的位置
bootstrap = "snlua bootstrap" --启动的第一个服务
--bootstrap配置
start = "main" --主服务
harbor = 0 --不使用主从节点模式

--lua配置
lualoader = "./skynet/lualib/loader.lua" 
luaservice = "./service/?/?.lua;".. "./skynet/service/?.lua;" .. "./skynet/test/?.lua;" .. "./startup/?.lua"
lua_path = "./service/common/?.lua;" .. "./etc/?.lua;" .. "./lualib/?.lua;" .. "./db/?.lua;" .. "./skynet/lualib/?.lua;" .. "./skynet/lualib/?/init.lua"
lua_cpath = "./luaclib/?.so;" .. "./skynet/luaclib/?.so"

--后台模式（必要时开启）
-- daemon = "./log/skynet.pid"
-- logger = "./log/userlog"

--自己添加的环境
set_preload = "./lualib/base/preload.lua"   -- 每个服务器都要加载的脚本

-- lua库的拓展(所有服务最先运行的文件,设计目的:只跟skynet引擎或lua有关)
extendlib = "./lualib/extend/extlibload.lua"

-- 开启日志控制台打印
log_stdin = true

-- cpu使用率日志
log_svccpu_path = "./log/main_node/svccpu"

-- 细化指令检测
profile_cmd = true

------------------ 节点信息 ------------------
is_cross = false
server_id = 1
nowaiting = true			-- 不挂起【其中利弊还未考量】
node = "main"				-- 节点名
node_type = "game_node"		-- 节点类型(游戏服节点)

merge_host = [[{			-- 合服的服务器编号
	-- [2] = true
}]]

------------------ 网关信息 ------------------
login_slavecnt = 8
login_port = 33001

------------------ 战斗场景 ------------------
scene = [[{
	[1] = 1001,
	[2] = 1002,
}]]

------------------ 数据库 ------------------
database_cachecnt = 100		-- 每个数据库链接缓存数据数量
database_num = 10			-- 每个链接数据库的个数
database_info = [[{
	dbhost = "127.0.0.1",
	dbport = 3306,
	dbname = "server1",
	dbuser = "root",
	dbpasswd = "root",
}]]

data_dirname	= "main"

centerdatadb_info = [[{
	dbhost = "127.0.0.1",
	dbport = 3306,
	dbname = "centerdata",
	dbuser = "root",
	dbpasswd = "root",
}]]
