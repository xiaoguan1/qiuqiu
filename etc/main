-- 主节点配置

thread = 8 --启用多少个工作线
cpath = "./skynet/cservice/?.so" --用C编写的服务模块的位置
bootstrap = "snlua bootstrap" --启动的第一个服务
--bootstrap配置
start = "main" --主服务
harbor = 0 --不使用主从节点模式

--lua配置
lualoader = "./skynet/lualib/loader.lua" 
luaservice = "./service/?.lua;" .."./service/?/init.lua;".. "./skynet/service/?.lua;" 
lua_path = "./service/common/?.lua;" .. "./etc/?.lua;" .. "./lualib/?.lua;" .. "./db/?.lua;" .. "./skynet/lualib/?.lua;" .. "./skynet/lualib/?/init.lua"
lua_cpath = "./luaclib/?.so;" .. "./skynet/luaclib/?.so"

--后台模式（必要时开启）
daemon = "./log/skynet.pid"
logger = "./log/userlog"

--节点编号
--node = "node1"
server_id = 1

--自己添加的环境
set_preload = "./lualib/base/preload.lua"   -- 每个服务器都要加载的脚本

------------------ 节点信息 ------------------
is_cross = false
server_id = 1
nowaiting = true	-- 不挂起【其中利弊还未考量】

------------------ 网关信息 ------------------
gateway_post = 9999		-- 端口
login_num = 10			-- 处理登录的服务数量

------------------ 战斗场景 ------------------
scene = [[{
	[1] = 1001,
	[2] = 1002,
}]]